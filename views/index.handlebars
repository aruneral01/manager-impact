
<style>

body {
  font: 10px sans-serif;
}

.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

.x.axis path {
  stroke: #C8C8D4;
}

.line {
  fill: none;
  stroke: steelblue;
  stroke-width: 1.5px;
}

</style>

<script src="https://cdnjs.cloudflare.com/ajax/libs/d3/3.5.5/d3.min.js"></script>
<div id="chart" class="chart"></div>
<script>

function annotations(svg){

  var annotations = svg.append("g")
      .attr("clip-path", "url(#clip)");


  annotations.append("circle")
      .attr("cx", 30)
      .attr("cy", 30)
      .attr("class", "annotations")
      .attr("r", 20);


  return annotations;
}

var margin = {top: 20, right: 80, bottom: 30, left: 50},
    width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;



function mainChart(data,color) {

  var x = d3.scale.linear()
      .range([0, width]);

  var y = d3.scale.linear()
      .range([height, 0]);

  var xAxis = d3.svg.axis()
      .scale(x);

  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left");

  var line = d3.svg.line()
      .defined(function(d) { return d.temperature != null; })
      .interpolate("basis")
      .x(function(d) { return x(d.date); })
      .y(function(d) { return y(d.temperature); });


  var svg = d3.select("#chart").classed('chart',true).append("svg")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
    .append("g")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  var cities = color.domain().map(function(name) {
    return {
      name: name,
      values: data.map(function(d) {
        return {date: d.date, temperature: d[name] ? +d[name] : null};
      })
    };
  });

  x.domain(["","365"]);

  y.domain(["-30","50"]);

  svg.append("defs").append("clipPath")
    .attr("id", "clip")
  .append("rect")
      .attr("width", width + margin.left)
    .attr("height", height + margin.bottom);

  svg.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0,296)")
      .call(xAxis);

  svg.append("g")
    	.attr("transform", "translate(" + margin.left + "," + margin.top + ")")
    	.attr("clip-path", "url(#clip)");

  svg.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text("Stock Price, NASDAQ Benchmark %");

  var city = svg.selectAll(".city")
      .data(cities)
    .enter().append("g")
      .attr("class", "city");

  var path = city.append("path")
      .attr("class", function(d) { return "line " + d.name; })
      .attr("d", function(d) { return line(d.values); })
      .style("stroke", function(d) { return color(d.name); });

  svg.selectAll(".city").attr("clip-path", "url(#clip)");

  var xscaleFactor = (x.range()[1] - x.range()[0])/(x.domain()[1] - x.domain()[0]);
  var yscaleFactor = (y.range()[1] - y.range()[0])/(y.domain()[1] - y.domain()[0]);

  var zoom = d3.behavior.zoom()
      .x(x)
      .y(y)
      .on('zoom', function() {
        var t = zoom.translate(),
          tx = t[0],
          ty = t[1];

        tx = Math.min(tx, 0);

        zoom.translate([tx, ty]);

        path.attr("transform", "translate(" + tx + ","+ ty + ") scale(" + d3.event.scale +")");
        svg.selectAll(".annotations").attr("transform", "translate(" + tx + ","+ty+")");

        svg.select('.x.axis').call(xAxis);
        svg.select('.y.axis').call(yAxis);
  });

  d3.select('svg').attr('cursor', 'move')
        .call(zoom)
        .on("mousewheel.zoom", null)
        .on("DOMMouseScroll.zoom", null);

  svg.call(zoom);

}

function lowerChart() {
  var navWidth = width,
    navHeight = 100 - margin.top - margin.bottom;

  var navChart = d3.select('#chart').classed('chart', true).append('svg')
    .classed('navigator', true)
    .attr('width', navWidth + margin.left + margin.right)
    .attr('height', navHeight + margin.top + margin.bottom)
    .append('g')
    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');


}

function toggle(name){
  var toToggle = d3.select(".line." + name);

  toToggle.transition()
  .style("opacity", toToggle.style("opacity") == 0 ? 100 : 0)
  .duration(500) // this is 1s
  .delay(100)
  .ease();
}

function rightToggles(filedata,color) {

  var labels = {
    marissa_mayer: {
        name: "Marissa Mayer",
        company: "Yahoo",
        years: "2011-"
    },
    larry_ellison: {
        name: "Larry Ellison",
        company: "Oracle",
        years: "2011-"
    },
    john_donahoe: {
        name: "John Donahoe",
        company: "Ebay",
        years: "2011-"
    },
    meg_whitman: {
        name: "Meg Whitman",
        company: "HP",
        years: "2011-"
    },
    satya_nadella: {
        name: "Satya Nadella",
        company: "Microsoft",
        years: "2011-"
    },
    tim_cook: {
        name: "Tim Cook",
        company: "Apple",
        years: "2011-"
    },
  };

  var toggleWidth = 150,
    toggleHeight = height;

  var toggles = d3.select('#chart').classed('chart', true).append('svg')
    .classed('toggles', true)
    .attr('width', 150)
    .attr('height', toggleHeight + margin.top + margin.bottom)
    .append('g');

  color.domain().forEach(function(name, i){

    // var rect = toggles.append("rect")
    //        .attr("x", 0)
    //       .attr("y", 83*i)
    //       .attr("class", name)
    //       .attr("width", 150)
    //       .attr("height", 80)
    //       .attr('cursor', 'pointer')
    //       .style("stroke", "#ACB0B5")
    //       .style("fill", "#ACB0B5")
    //       .style("opacity", 0.1);

    var circle = toggles.append("circle")
          .attr("cx", 29)
          .attr("cy", 41+(i*83))
          .attr("r", 28)
          .attr("class", name)
          .attr('cursor', 'pointer')
          .style("stroke", color(name))
          .style("fill", color(name))
          .style("opacity", 0.7);

    var nameLabel = toggles.append("text")
          .attr("x", 65)
          .attr("y", 31+(83*i))
          .text(labels[name].name)
          //.attr("font-family", "sans-serif")
          .attr("font-size", "12px")
          .attr("fill", "#3F4548")
          .style("opacity", 0.9);

    var companyLabel = toggles.append("text")
          .attr("x", 65)
          .attr("y", 46+(83*i))
          .text(labels[name].company)
          //.attr("font-family", "sans-serif")
          .attr("font-size", "12px")
          .attr("fill", "#3F4548")
          .style("opacity", 0.7);

    var yearsLabel = toggles.append("text")
          .attr("x", 65)
          .attr("y", 61+(83*i))
          .text("("+ labels[name].years +")")
          //.attr("font-family", "sans-serif")
          .attr("font-size", "10px")
          .attr("fill", "#3F4548")
          .style("opacity", 0.7);

    var defs = toggles.append("clipPath")
          .attr("id", "clip_" + name);

    var clip = defs.append("circle")
          .attr("cx", 29)
          .attr("cy", 41+(i*83))
          .attr("r", 25);

    var avatar = toggles.append("image")
          .attr("x", 4)
          .attr("y", 16+(83*i))
          .attr("width", 50)
          .attr("height", 50)
          .attr("xlink:href", "/images/" + name + ".jpg")
          .attr("clip-path", "url(#clip_"+name+")");

    circle.on("click", function() {
      toggle(name);
    });

    // rect.on("click", function() {
    //   toggle(name);
    // });
  });



}

d3.tsv("/data/ceo.csv", function(error, filedata) {
  if (error) throw error;

  var color = d3.scale.category10();
  color.domain(d3.keys(filedata[0]).filter(function(key) { return key !== "date"; }));

  mainChart(filedata,color);
  rightToggles(filedata,color);
  lowerChart();
});






</script>
